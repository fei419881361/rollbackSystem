<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.StudentMapper">

  <resultMap id="BaseResultMap" type="entity.Student">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sname" jdbcType="VARCHAR" property="sname" />
    <result column="sid" jdbcType="VARCHAR" property="sid" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="sclass" jdbcType="INTEGER" property="sclass" />
    <result column="sgrade" jdbcType="INTEGER" property="sgrade" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sname, sid, account, pwd, sex, sclass, sgrade
  </sql>
  <select id="selectByExample" parameterType="entity.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="entity.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.Student">
    insert into student ( sname, sid,
      account, pwd, sex, 
      sclass, sgrade)
    values ( #{sname,jdbcType=VARCHAR}, #{sid,jdbcType=VARCHAR},
      #{account,jdbcType=VARCHAR}, #{pwd,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{sclass,jdbcType=INTEGER}, #{sgrade,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="entity.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sname != null">
        sname,
      </if>
      <if test="sid != null">
        sid,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="sclass != null">
        sclass,
      </if>
      <if test="sgrade != null">
        sgrade,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sname != null">
        #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        #{sid,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="sclass != null">
        #{sclass,jdbcType=INTEGER},
      </if>
      <if test="sgrade != null">
        #{sgrade,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sname != null">
        sname = #{record.sname,jdbcType=VARCHAR},
      </if>
      <if test="record.sid != null">
        sid = #{record.sid,jdbcType=VARCHAR},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.pwd != null">
        pwd = #{record.pwd,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=INTEGER},
      </if>
      <if test="record.sclass != null">
        sclass = #{record.sclass,jdbcType=INTEGER},
      </if>
      <if test="record.sgrade != null">
        sgrade = #{record.sgrade,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=INTEGER},
      sname = #{record.sname,jdbcType=VARCHAR},
      sid = #{record.sid,jdbcType=VARCHAR},
      account = #{record.account,jdbcType=VARCHAR},
      pwd = #{record.pwd,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=INTEGER},
      sclass = #{record.sclass,jdbcType=INTEGER},
      sgrade = #{record.sgrade,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.Student">
    update student
    <set>
      <if test="sname != null">
        sname = #{sname,jdbcType=VARCHAR},
      </if>
      <if test="sid != null">
        sid = #{sid,jdbcType=VARCHAR},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="sclass != null">
        sclass = #{sclass,jdbcType=INTEGER},
      </if>
      <if test="sgrade != null">
        sgrade = #{sgrade,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.Student">
    update student
    set sname = #{sname,jdbcType=VARCHAR},
      sid = #{sid,jdbcType=VARCHAR},
      account = #{account,jdbcType=VARCHAR},
      pwd = #{pwd,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      sclass = #{sclass,jdbcType=INTEGER},
      sgrade = #{sgrade,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findAllBySplit" resultMap="BaseResultMap">
    select * from student WHERE
    1>0
    <if test="sclass != null">
      AND sclass = #{sclass}
      <if test="sgrade != null">
        AND sgrade = #{sgrade}
      </if>
    </if>

    <if test="sgrade != null">
      AND sgrade = #{sgrade}
    </if>

    limit #{currentPage},#{lineSize}
  </select>

  <select id="getAllCount" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM student WHERE
    1>0
    <if test="sclass != null">
      AND sclass = #{sclass}
      <if test="sgrade != null">
        AND sgrade = #{sgrade}
      </if>
    </if>

    <if test="sgrade != null">
      AND sgrade = #{sgrade}
    </if>
  </select>

  <select id="findBySid" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT COUNT(*) FROM student WHERE sid = #{sid}
  </select>

  <select id="getClassStudent" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT * from student Where sclass = #{sclass} AND sgrade = #{sgrade}
  </select>

  <select id="selectByaccountANDpwd" resultType="entity.Student">
     SELECT
    *
    FROM
    student
    WHERE
    sid = #{sid} AND pwd = #{pwd}
  </select>

  <update id="resetPwd">
    UPDATE student
    SET pwd = #{npwd}
    WHERE sid = #{sid} AND pwd = #{pwd}
  </update>
</mapper>